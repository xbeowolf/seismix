---UTF8------------------------------------------------------------------------
--                   © BEOWOLF / Podobashev Dmitry, 2011                     --
--     email: xbeowolf@gmail.com     skype: x-beowulf     icq: 320329575     --
-------------------------------------------------------------------------------

-- Редактировать этот скрипт можно в Notepad++ http://notepad-plus-plus.org/

dofile("keyfiles.lua")

--[[
-------------------------------------------------------------------------------

Хостовая программа "seismix.exe" предоставляет для использования в этом скрипте
следующие 3 функции:

-------------------------------------------------------------------------------

mci.play

Функция служит для проигрывания любых мультимедийных файлов, с указанием
отрезка воспроизведения.

Формат записи: mci.play(file, from, to)
Эта функция принимает 3 аргумента:
   file - имя и путь к файлу, который должен проигрываться. Эта строка должна
заключаться в кавычки. Если в строке присутствуют обратные флеши "\", то они
должны дублироваться (экранирование). Пример: "c:\\sounds\\33.mp3"
   from - стартовая позиция проигрывания файла, в миллисекундах. Если
необходимо проигрывание с самого начала, следует передать ноль. Если, например,
необходимо воспроизвести начиная с 7-ой секунды, то передаётся значение 7000.
   to - конечная позиция воспроизведения файла, в миллисекундах. Если нужно
воспроизвести до конца, то следует передать ноль. Если, например, нужно
воспроизвести до 9-ой секунды, нужно передать 9000.

Пример использования:
mci.play("a1", 0, 0)
здесь будет проигрываться файл "a1.mp3" от начала до конца
mci.play("с3.mp3", 500, 2500)
здесь будет проигрываться файл "с3.mp3" начиная с 0,5 секунды до 2,5.
mci.play("с3.mp3", 500, 500+2000)
То же самое, что и в предыдущем примере, только конец воспроизведения задаётся
как начало плюс длина.

Возвращаемое значение: 0, если команда выполнена успешна, иначе код MCI-ошибки.

-------------------------------------------------------------------------------

mci.send

Функция управления мультимедийным устройством.

Формат записи: mci.send(command)
Эта функция принимает 1 аргумент:
   command - строка с командой, посылаемой мультимедийному устройству. Строка
начинается с описателя команды, для проигрывания файла нужно написать "play",
для паузы проигрываемого файла "pause", для возобновления после паузы "resume".
Если воспроизводимый файл - большой, может понадобиться "stop" для останова.
После описателя следует через пробел файл, для которого выполняется команда.
Если эта команда - "play", то далее можно указать начало воспроизведения
"from X", где X - время относительно начала файла в миллисекундах, и можно
указать конец воспроизведения "to X", где X - время конца в миллисекундах.
Далее можно указать атрибут "wait", который означает, что необходимо дождаться
окончания выполнения команды. Например, в случае проигрывания, если есть
"wait", то выполнение скрипта будет приостановлено, пока проигрывание не
закончится; если "wait" не указан, то следующая функция будет выполнена сразу
же после начала воспроизведения. Таким способом можно создавать простейшие
миксы: запустить на воспроизведение один файл без атрибута "wait", а затем
через паузу другой файл, который тоже можно смикшировать в свою очередь.

Вместо файла можно указать компакт-диск, и управлять его воспроизведением.

Пример использования:
mci.send("play c2.mp3 from 2000 to 5000 wait")
воспроизводит файл «c2.mp3» со 2-ой секунды по 5-ю.

Возвращаемое значение: 0, если команда выполнена успешна, иначе код MCI-ошибки.

-------------------------------------------------------------------------------

mci.pause

Функция служит для вставки паузы.

Формат записи: mci.pause(time)
Эта функция принимает 1 аргумент:
   time - время паузы, в миллисекундах. Например, чтобы сделать паузу в
полсекунды, нужно передать значение 500.

Пример использования:
mci.pause(1000)
создаёт паузу в 1 секунду.

-------------------------------------------------------------------------------
]]



--[[
-------------------------------------------------------------------------------

Таблица ассоциаций.

Здесь задаётся таблица ассоциаций между ключевыми словами в списке
воспроизведения, и связаными с ними действиями.

Таблица состоит из списка записей, каждая начинается с указания ключа в
квадратных скобках и кавычках, далее идёт скриптовая функция, вызываемая
для соответствующего ключа. Функция может содержать либо только 1 вызов mci.play
для проигрывания нужного файла, либо в ней можно указать сразу целый перечень
действий.

Примеры записей:

["a1"] = function() mci.play("a1.mp3", 0, 0) end,
Здесь для ключа "a1" будет воспроизводиться файл a1.mp3 от начала до конца.

["all"] = function()
	mci.play("a1.mp3", 0, 0)
	mci.pause(500)
	mci.play("a2.mp3", 0, 0)
	mci.pause(500)
	mci.play("a3.mp3", 0, 0)
end,
Здесь для ключа "all" будет воспроизводиться 3 файла последовательно: a1.mp3,
a2.mp3, a3.mp3, от начала до конца каждый, с паузами в полсекунды между ними.

["split"] = function()
	mci.play("big.mp3", 0, 2000)
	mci.pause(500)
	mci.play("big.mp3", 2000, 0)
end,
Здесь для ключа "split" будет воспроизводиться 1 файл big.mp3, причём сначала
будет проиграны первые 2 секунды, сделана пауза в полсекунды, и проигран
остаток файла.

-------------------------------------------------------------------------------
]]

-- Максимальная длина идентификатора в плейлисте
MaxIdLength = 5
-- Пропускать ли симолы, не найденные в таблице ассоциаций
SkipErrSym = true

-- Здесь можно задать имя файла по умолчанию с плейлистом
DefaultPlaylistFile = "playlist.txt"

-- Здесь можно указать букву музыкального компакт-диска
CDDevice = 'I'

-- Таблица ассоциаций ключей плейлиста с выполняемыми действиями
-- здесь также можно определить действия для исключительных символов
KeyFuncs = {

	--- Паузы ---

	["p"] = function() mci.pause(500) end,

	--- Страница A ---

	["a1"] = function() mci.play("a1.mp3", 0, 0) end,
	["a2"] = function() mci.play("a2.mp3", 0, 0) end,

	["ac"] = function() mci.send("play a1.mp3 from 2400 to 7000 wait") end,

	--- Страница C ---

	["c1"] = function() mci.play("c1.mp3", 0, 0) end,
	["c2"] = function() mci.play("c2.mp3", 0, 0) end,
	["c3"] = function() mci.play("c3.mp3", 0, 0) end,

	--- Миксы ---

	["ma"] = function()
			mci.send("play a1.mp3")
			mci.pause(3000) mci.send("play c2.mp3 to 5000 wait") mci.pause(3000)
		end,
	["mix"] = function()
			mci.send("play a1.mp3 to 7000")
			mci.pause(5000)
			mci.send("play c1.mp3")
			mci.pause(5000)
			mci.play("c3.mp3", 0, 0)
		end,

	--- Музыкальный компактдиск ---

	-- пример плейлиста, проигрывающего звуки на фоне 1-го трека с компакта:
	-- "cdo cd1 mx ma a1 cds cdc"
	["cdo"] = function() mci.send("open "..CDDevice.." type cdaudio alias cd wait shareable") mci.send("set cd time format tmsf") end,
	["cdp"] = function() mci.send("pause cd") end,
	["cdr"] = function() mci.send("resume cd") end,
	["cds"] = function() mci.send("stop cd") end,
	["cdc"] = function() mci.send("close cd") end,
	["cd1"] = function() mci.send("play cd from 1 to 2") end,
	["cd2"] = function() mci.send("play cd from 2 to 3") end,
}



--[[
-------------------------------------------------------------------------------

Главный алгоритм.

Функция "main" вызывается из хостовой программы "seismix.exe", в качестве
аргумента "playlist" передаётся строка со списком воспроизведения.

Список представляет собой перечень ключей из таблицы "KeyFuncs", либо из
таблицы "KeyFiles", ключи с более длинным именем имеют больший приоритет.

Можно в параметрах командной строки передать файл, содержащий плейлист.

Если в параметрах командной строки ничего не содержится, то будет открыт
плейлист, содержайщийся в файле, указанном в "DefaultPlaylistFile".

Например, список может быть следующим: "a1c1pa2c2c3".

-------------------------------------------------------------------------------
]]

-- Краткие описания основных поддерживаемых расширений форматов файлов
ExtDescr = {
	wav = "plain wave audio",
	mp3 = "MPEG Layer-3",
	wma = "Windows Media Audio",
	ogg = "Ogg Vorbis",
	aif = "Audio Interchange File Format",
	aiff = "Audio Interchange File Format",
}

function main(playlist)
	if #playlist == 0 then playlist = DefaultPlaylistFile end
	if #playlist > 3 and not ExtDescr[string.lower(string.sub(playlist, -3))] then
		local file = io.open(playlist)
		if file then
			playlist = file:read("*a")
			io.close(file)
		end
	end

	local str = ""
	local pos = 1
	for i = 1, #playlist do
		if string.byte(playlist, i) < 32 then
			if i > pos then
				str = str..string.sub(playlist, pos, i-1)
			end
			pos = i + 1
		end
	end
	playlist = str..string.sub(playlist, pos)
	print("Playlist: '"..playlist.."'")

	local pos, len = 1
	repeat
		len = MaxIdLength
		repeat
			local s = string.sub(playlist, pos, pos+len-1)
			if KeyFuncs[s] then
				print("playing '"..s.."'")
				KeyFuncs[s]()
				break
			elseif KeyFiles[s] then
				print("playing '"..s.."'")
				local err = mci.play(KeyFiles[s], 0, 0)
				if err ~= 0 then
					print("error on multimedia device with code "..err.." with file "..KeyFiles[s])
				end
				break
			end
			len = len - 1
		until len == 0
		if len == 0 then
			print("unknown symbol in playlist at position "..pos)
			if not SkipErrSym then break end
			len = 1
		end
		pos = pos + len
	until pos > #playlist
end

-- The End.